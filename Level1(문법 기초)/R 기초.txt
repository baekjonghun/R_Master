R 스튜디오에 대해 알아보자 . ..


-----------R 언어-------------------------------------------------------------------------
1.주석 : # (주석도 실행시 terminal 창에 보여줍니다. )
2.변수 선언 var  <- 5

#연산자 
더하기:3 + 2 
빼기:5 - 2
곱하기:4 * 2
나누기:4 / 2
승 수:4 ^ 2
나머지:4 %% 2
나누기 결과를 정수:4 %/% 2

5 >= 2 TRUE
! not
| or
& and

값의 TRUE 여부:isTRUE
값의 FALSE 여부:isFALSE

#자료형 
5  = double (실수)
5L = Integer (정수)
1 + 4i = complex (실수_+ 허수 )

이외의 값 
NULL :값이 존재하지않음
NA:사용할 수 없는 경우 
lnf , -lnf : 양과 음의 무한대 
NaN:수의 연산에서 불능의 경우 표현

-------자료 확인----------------------------------------------------------------------------------------------------
R에서는 기본적인 데이터는 Vector[배열] 형태를 가지고 있다. 

typeof(var)  : 원시자료형 (R에서) 
?typeof(var) #Help ?  
class() : R 객체 지향 관점에서 의 자료형 
mode():원시 자료형 (S에서)

is.Integer() #값이 int 형인지 확인
is.numeric(x) #값이 실수 인지 확인

is.nan() #데이터 가 확인이 불가능 할 때 
ls() #자료형의 변수 사용여부 확인'
ls(all.names = TRUE) #모든 이름 출력 
-------자료(변수) 삭제--------------------- 
rm(var) #특정 변수를 삭제 하는 메소드
rm(list = ls()) # 모두 삭제 


(3)자료형의 출력 
print(var , var2 ) #error
cat(var , var2) #여러 개의 변수를 사용할때 사용


----------배열 의 사용 ------------------------------------------------------------------------------------------------------
c1 =  c(1,2,3 , 'hi') #index 1 Start
                               

#index 1 ~ 3 
#print(c1[1:3])

#index 2 만 제외하고 출력하시오.
result = c1[-2]
print(result)

--------열을 행으로 바꿈--------------------------------------------------------------------------------------------------------
#index2 , 4 만 출력 
c1[c(2,4)] #c는 컬럼의 역할 2
t(c1)

 3 %in% c1   #3이 포함되어있는지 확인 
 'hi' %in% c1


------------------------------------------------------------------------------------------------------------------------------------

#1,2,3,4,5,6,7,8,9,10
c2  = c(1:10)

#값을 2씩 증가
s1 = seq(1 , 10,2)

#값이 10부터 20까지 2씩 증가
s2 = seq(from= 10 ,to=20 , by=2.1)

s3 = 20:30  #20 ~ 30 
--------------------------반복--------------------------------------------------------------------------------------------------------
2,3,4,5
#re  <- rep(2,5)
re1 <- rep(2:5  ,each = 3) #2~5 roop * 3
print(re1)


#문제   v1:  1 ~ 8   v2:11~18 
#계산   v2:  11 ~ 18 


v1 = c(1:8)
#c(8:1) 감소되서 들어간다.

v2 = c(11:18)


#re = v1[rep(1:8)] + v2[rep(11:18)]
v1 + v2
v1 - v2
v1 * v2
v1 %/% v2


sum(v2+v1)
min(v2-v1)
v2 %*% v1 ##곱하고 더한다.

--------------------------------------------------------------------------------------------------------------------
num1 = c(1:3)
num2 = c(1:3)
t(num1) 
num2 %*% t(num1)
--------------------------------------------------------------------------------------------------------------------
result : 
     [,1] [,2] [,3]
[1,]    1    2    3
[2,]    2    4    6
[3,]    3    6    9
--------------------------------------------------------------------------------------------------------------------
배열을 만들어 보자....
#배열의 생성
#4행의 5열을 나타 냅니다. 
arr1  = array(1:20 , dim =c(4,5))

#2차원
arr2  = array(1:20 , dim =c(4,5,2))
arr3  = array(1:8 , dim =c(4,5,2))
arr4  = array(1:15 , dim = c(4,5,3))

print(arr4)
#, , 1

#[,1] [,2] [,3] [,4] [,5]
#[1,]    1    5    1    5    1
#[2,]    2    6    2    6    2
#[3,]    3    7    3    7    3
#[4,]    4    8    4    8    4



arr1[,1] #1234
arr1[1,] #1  5  9 13 17
arr1[1,2] #5


#1면의 모든 값을 출력하시오
arr2[,,1]
#1면과 2면의 1행 1열의 값 출력
arr3[1,1,]
#2면을 제외한 1행의 값
arr4[1,,-2]
#1면을 제외한 2열의 값
arr4[2,,-1]

#2차원 배열 , 3차원 배열 , --array( )
#array() 를 사용하지 않고 , c()를 사용하여 배열 

#array(1:20 , dim = c(4,5))

##처음 부터 배열 형태로 만듭니다.
arr1 = c(1:20)
arr2 = c(1:20)

dim(arr2) = c(4,5)
arr2