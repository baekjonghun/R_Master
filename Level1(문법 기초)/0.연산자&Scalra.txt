
-----------R 언어-------------------------------------------------------------------------

-------자료 확인----------------------------------------------------------------------------------------------------
R에서는 기본적인 데이터는 Vector[배열] 형태를 가지고 있다. 

typeof(var)  : 원시자료형 (R에서) 
?typeof(var) #Help ?  
class() : R 객체 지향 관점에서 의 자료형 
mode():원시 자료형 (S에서)

is.Integer() #값이 int 형인지 확인
is.numeric(x) #값이 실수 인지 확인

is.nan() #데이터 가 확인이 불가능 할 때 
ls() #자료형의 변수 사용여부 확인'
ls(all.names = TRUE) #모든 이름 출력 




-------자료(변수) 삭제--------------------- 
rm(var) #특정 변수를 삭제 하는 메소드
rm(list = ls()) # 모두 삭제 


(3)자료형의 출력 
print(var , var2 ) #error
cat(var , var2) #여러 개의 변수를 사용할때 사용

2.변수 선언 var  <- 5

#연산자 
더하기:3 + 2 
빼기:5 - 2
곱하기:4 * 2
나누기:4 / 2
승 수:4 ^ 2
나머지:4 %% 2
나누기 결과를 정수:4 %/% 2

5 >= 2 TRUE
! not
| or
& and

값의 TRUE 여부:isTRUE
값의 FALSE 여부:isFALSE

#자료형  (스칼라)
5  = double (실수)
5L = Integer (정수)
1 + 4i = complex (실수_+ 허수 )

이외의 값 
NULL :값이 존재하지않음
NA:사용할 수 없는 경우 
lnf , -lnf : 양과 음의 무한대 
NaN:수의 연산에서 불능의 경우 표현
-----------------------------------------------------------------------------------------------------------

-------자료 확인----------------------------------------------------------------------------------------------------
R에서는 기본적인 데이터는 Vector[배열] 형태를 가지고 있다. 

typeof(var)  : 원시자료형 (R에서) 
?typeof(var) #Help ?  
class() : R 객체 지향 관점에서 의 자료형 
mode():원시 자료형 (S에서)

is.Integer() #값이 int 형인지 확인
is.numeric(x) #값이 실수 인지 확인

is.nan() #데이터 가 확인이 불가능 할 때 
ls() #자료형의 변수 사용여부 확인'
ls(all.names = TRUE) #모든 이름 출력 
-------자료(변수) 삭제--------------------- 
rm(var) #특정 변수를 삭제 하는 메소드
rm(list = ls()) # 모두 삭제 


(3)자료형의 출력 
print(var , var2 ) #error
cat(var , var2) #여러 개의 변수를 사용할때 사용